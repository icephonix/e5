server.port= 8083

# 线上环境设置为false，这里用到模拟用户
isdebug=true

#server.servlet.session.tracking-modes=

# 设定ftl文件路径
spring.freemarker.template-loader-path=classpath:/templates
spring.freemarker.suffix=.ftl
# 关闭缓存，及时刷新，上线生产环境需要修改为true
spring.freemarker.cache=false
spring.freemarker.charset=UTF-8
spring.freemarker.check-template-location=true
spring.freemarker.content-type=text/html
spring.freemarker.expose-request-attributes=true
spring.freemarker.expose-session-attributes=true
spring.freemarker.request-context-attribute=request

#通用数据源配置 Qzw4tBjBr2oRMPUF
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/e5?charset=utf8mb4&useSSL=false
#spring.datasource.url=jdbc:h2:tcp://127.0.0.1:3306/springboot_jpa
spring.datasource.username=root
spring.datasource.password=123456

# Redis
#Redis服务器地址
spring.redis.host=127.0.0.1
#Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=
#Redis数据库索引（默认为0）
spring.redis.database=1
#连接池最大连接数（使用负值表示没有限制）
spring.redis.jedis.pool.max-active=50
#连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.jedis.pool.max-wait=3000
#连接池中的最大空闲连接
spring.redis.jedis.pool.max-idle=20
#连接池中的最小空闲连接
spring.redis.jedis.pool.min-idle=5
#连接超时时间（毫秒）
spring.redis.timeout=4000


# RabbitMq
#e5
#bifC1RT0kLQAxvv3pMRO

#Rabbit 消息队列配置
spring.rabbitmq.host=142.4.209.94
spring.rabbitmq.port=5672
spring.rabbitmq.username=e5
spring.rabbitmq.password=bifC1RT0kLQAxvv3pMRO
spring.rabbitmq.virtual-host=e5
spring.rabbitmq.connection-timeout=15000
#消费者最小数量
spring.rabbitmq.listener.simple.concurrency=1
#消费者最大数量
spring.rabbitmq.listener.simple.max-concurrency=10
#消费者每次从队列获取的消息数量。写多了，如果长时间得不到消费，数据就一直得不到处理
spring.rabbitmq.listener.simple.prefetch=20
#设置消费端手动 ack
spring.rabbitmq.listener.simple.acknowledge-mode=manual
# 限流
#spring.rabbitmq.listener.simple.prefetch=1

#开启 confirm 确认机制
#spring.rabbitmq.publisher-confirms=true
#开启 return 确认机制
spring.rabbitmq.publisher-returns=true
#设置为 true 后 消费者在消息没有被路由到合适队列情况下会被return监听，而不会自动删除
spring.rabbitmq.template.mandatory=true


# 每页显示条数
page.size = 10
# 定时器
qz_cron = 0/20 * * * * ?

#Redis用户Token头前缀设置
#redis.userhead=user.token:
redis.auth2.github=github.state:
redis.auth2.outlook=outlook.state:

redis.user.token=token:

github.client_id=9a1865dc71f4c68e8147
github.client_secret=6c670aacf3e7c0824604d0cca7ec4e2866fc7d82

outlook.authorize.url = https://login.microsoftonline.com/common/oauth2/v2.0/authorize?client_id=%s&redirect_uri=%s&response_type=code&scope=openid offline_access Mail.Read&state=%s
outlook.errorMsg = CompactToken validation, Access token has expired, Access token validation failure

